name: Build

defaults:
  run:
    shell: bash

on:
  push:
    branches:
      - master

jobs:
  discover:
    name: Discover directories
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.collect.outputs.matrix }}
      has_targets: ${{ steps.collect.outputs.has_targets }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: false

      - name: Set up SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Git clone private repo
        env:
          SSH_CONFIG: |
            Host github.com
            HostName github.com
            User git
            IdentityFile /root/.ssh/id_rsa
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_CONFIG" > ~/.ssh/config
          mkdir -p private-repo
          cd private-repo
          git clone --depth=1 git@github.com:kuaifan/dooso.git
          git clone --depth=1 git@github.com:cossteam/cosslan-tool.git
          git clone --depth=1 git@github.com:cossteam/cosslan-client.git
          find . -name ".git" -type d -exec rm -rf {} +

      - name: Upload private repos
        uses: actions/upload-artifact@v4
        with:
          name: private-repo
          path: private-repo

      - name: Collect build targets
        id: collect
        run: |
          set -euo pipefail
          bash ./build.sh list >>"$GITHUB_OUTPUT"

  build:
    needs: discover
    name: Build ${{ matrix.dir }}
    if: ${{ needs.discover.outputs.has_targets == 'true' }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.discover.outputs.matrix) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
          token: ${{ secrets.PERSONAL_TOKEN }}

      - name: Update submodules
        run: |
          git submodule update --init --recursive
          git submodule update --remote --recursive

      - name: Download private repos
        uses: actions/download-artifact@v4
        with:
          name: private-repo
          path: private-repo

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push ${{ matrix.dockerfile }}
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        run: |
          bash ./build.sh build "${{ matrix.dir }}" "${{ matrix.dockerfile }}"
